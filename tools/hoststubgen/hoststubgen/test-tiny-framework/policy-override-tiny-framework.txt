class com/android/hoststubgen/test/tinyframework/TinyFrameworkForTextPolicy	stub
  field stub	stub
  field keep	keep
  # field remove	remove # Implicitly remove
  method <init>	()V	            stub
  method addOne	(I)I	        stub
  method addOneInner	(I)I	keep
  method toBeRemoved	(Ljava/lang/String;)V	remove
  method addTwo	(I)I	        @addTwo_host
  # method addTwo_host	(I)I	# used as a substitute
  method nativeAddThree	(I)I	@addThree_host
  # method addThree_host	(I)I	# used as a substitute
  method unsupportedMethod	()Ljava/lang/String;	throw
  method visibleButUsesUnsupportedMethod	()Ljava/lang/String;	stub
  method toBeIgnoredObj	()Ljava/lang/String;	ignore
  method toBeIgnoredV	()V	ignore
  method toBeIgnoredZ	()Z	ignore
  method toBeIgnoredB	()B	ignore
  method toBeIgnoredC	()C	ignore
  method toBeIgnoredS	()S	ignore
  method toBeIgnoredI	()I	ignore
  method toBeIgnoredL	()L	ignore
  method toBeIgnoredF	()F	ignore
  method toBeIgnoredD	()D	ignore

# Class load hook
class com/android/hoststubgen/test/tinyframework/TinyFrameworkForTextPolicy	~com.android.hoststubgen.test.tinyframework.TinyFrameworkClassLoadHook.onClassLoaded

# Heuristics rule: Stub all the AIDL classes.
class :aidl stubclass

# Heuristics rule: Stub all the R classes.
class :r stubclass

# Default is "remove", so let's put all the base classes / interfaces in the stub first.
class com.android.hoststubgen.test.tinyframework.subclasstest.C1 stub
class com.android.hoststubgen.test.tinyframework.subclasstest.C2 stub
class com.android.hoststubgen.test.tinyframework.subclasstest.C3 stub
class com.android.hoststubgen.test.tinyframework.subclasstest.CA stub
class com.android.hoststubgen.test.tinyframework.subclasstest.CB stub
class com.android.hoststubgen.test.tinyframework.subclasstest.I1 stub
class com.android.hoststubgen.test.tinyframework.subclasstest.I2 stub
class com.android.hoststubgen.test.tinyframework.subclasstest.I3 stub
class com.android.hoststubgen.test.tinyframework.subclasstest.IA stub
class com.android.hoststubgen.test.tinyframework.subclasstest.IB stub

# Then define inheritance based policies.
class *com.android.hoststubgen.test.tinyframework.subclasstest.C1 keep
class *com.android.hoststubgen.test.tinyframework.subclasstest.CA remove

class *com.android.hoststubgen.test.tinyframework.subclasstest.I1 keep
class *com.android.hoststubgen.test.tinyframework.subclasstest.IA remove

# Test package directive
package com.android.hoststubgen.test.tinyframework.packagetest stub
class com.android.hoststubgen.test.tinyframework.packagetest.B remove
class com.android.hoststubgen.test.tinyframework.packagetest.sub.B remove
# The following rules are the same as above
# class com.android.hoststubgen.test.tinyframework.packagetest.A stub
# class com.android.hoststubgen.test.tinyframework.packagetest.sub.A stub


# "rename" takes a type internal name, so '/'s is used as a separator.
# The leading / in the prefix is not needed (it'll be stripped), but it's added to make
# sure the stripping works.
rename ^.*/TinyFrameworkToBeRenamed$ /rename_prefix/
